= Release Notes for REST Assured 1.7 =

== Highlights ==
  * Support for [http://code.google.com/p/rest-assured/wiki/Usage#Configuration configuring pre-defined] object mappers
  * Support for creating [http://code.google.com/p/rest-assured/wiki/Usage#Custom custom] object mappers
  * Support for two new HTTP verbs: PATCH and OPTIONS
  * Support for Faster Jackson (Jackson 2.0)

== Non-backward compatible changes ==
  * Fixed a serious issue with content-type validation, it was actually ignored in the previous versions (issue 146).
  * Default content encoding charset has been changed from UTF-8 to ISO-8859-1 to comply with the RFC 2616. To change this use the EncoderConfig, e.g.
    {{{
RestAssured.config = newConfig().encoderConfig(encoderConfig().defaultContentCharset("UTF-8"));
    }}}
  You can also specify the default query parameter charset.
  * Default decoding content charset has been changed from platform default to ISO-8859-1 to comply with the RFC 2616. To change this use the DecoderConfig, e.g.
    {{{
RestAssured.config = newConfig().decoderConfig(decoderConfig().defaultContentCharset("UTF-8"));
    }}}
  * `groovyx.net.http.ContentType` has been renamed to `com.jayway.restassured.http.ContentType`.
  * Third party dependencies have been updated. If you're not using Maven you need replace the [http://rest-assured.googlecode.com/files/rest-assured-legacy-dependencies.zip old] ones with the [http://rest-assured.googlecode.com/files/rest-assured-dependencies.zip new] ones in the classpath.

== Other notable changes ==
  * REST Assured now automatically detects content-types ending with +xml, +json and +html (for example application/something+json) and parses the content with the corresponding parser. This means that you don't need to register custom parsers for these kind of content-types (issue 142).
  * Implemented support for no-value parameters, for example:
    {{{
given().queryParam("someParameterName").when().get("/something");
    }}}
  This works for both "request parameters", query parameters and form parameters. (issue 143)
  * The HTTP Delete method now supports a method body 
  * PUT request now work for multi part form data uploading
  * XmlPath supports prettifying and pretty-printing XML and HTML, for example:
    {{{
String prettyXml = with(someXml).prettify(); // Return a prettified XML string. 
    }}}
  or print the XML to System.out and then return it:
    {{{
String prettyXml = with(someXml).prettyPrint(); // Prints and returns a prettified XML string. 
    }}}
  "with" is statically imported from `com.jayway.restassured.path.xml.XmlPath` (issue 147).
  * JsonPath supports prettifying and pretty-printing JSON documents, for example:
    {{{
String prettyJson = with(someJson).prettify(); // Return a prettified JSON string. 
    }}}
  or print the JSON to System.out and then return it:
    {{{
String prettyJson = with(someJson).prettyPrint(); // Prints and returns a prettified JSON string. 
    }}}
  "with" is statically imported from `com.jayway.restassured.path.json.JsonPath` (issue 147).

== Minor changes ==
See [http://github.com/jayway/rest-assured/raw/master/changelog.txt change log] for more details