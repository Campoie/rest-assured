= Release Notes for REST Assured 1.5 =

== Highlights ==
  * Fixed an issue with PUT method duplicating form parameters as query parameters (issue 137)    
  * Created a [http://rest-assured.googlecode.com/svn/tags/1.5/apidocs/com/jayway/restassured/builder/ResponseBuilder.html ResponseBuilder] to make it easier to create new Response implementations. This is useful if you're working with filters and want to change the response you get from the sever somehow. E.g. 
    {{{
Response myResponse = new ResponseBuilder().clone(originalResponse).setBody("Something").build();
    }}}
  * Added possibility for more some more advanced configuration by providing a [http://rest-assured.googlecode.com/svn/tags/1.5/apidocs/com/jayway/restassured/config/RestAssuredConfig.html RestAssuredConfig] instance. Right now you can configure the parameters of [http://rest-assured.googlecode.com/svn/tags/1.5/apidocs/com/jayway/restassured/config/HttpClientConfig.html HTTP Client], [http://rest-assured.googlecode.com/svn/tags/1.5/apidocs/com/jayway/restassured/config/RedirectConfig.html Redirect] and [http://rest-assured.googlecode.com/svn/tags/1.5/apidocs/com/jayway/restassured/config/LogConfig.html Log] settings. Examples:
  For a specific request:
  {{{
given().config(newConfig().redirect(redirectConfig().followRedirects(false))). ..
  }}}
  or using a RequestSpecBuilder:
  {{{
RequestSpecification spec = new RequestSpecBuilder().setConfig(newConfig().redirect(redirectConfig().followRedirects(false))).build();
  }}}
  or for all requests:
  {{{
 RestAssured.config = config().redirect(redirectConfig().followRedirects(true).and().maxRedirects(0));
  }}}
  `config()` and `newConfig()` can be statically imported from `com.jayway.restassured.config.RestAssuredConfig`.
  * Logging has been improved, see [http://code.google.com/p/rest-assured/wiki/ReleaseNotes15#Non-backward_compatible_changes below].

== Non-backward compatible changes ==
  * Logging has undergone a major change. You can now not only log the response body but also headers, cookies and status line. You can also log the request details as defined in the [http://rest-assured.googlecode.com/svn/tags/1.5/apidocs/com/jayway/restassured/specification/RequestSpecification.html request specification]. Thus the following:
  {{{
given().log(). .. // Log the response body in versions prior to 1.5
  }}}
  and
  {{{
expect().log(). .. // Also logs the response body in versions prior to 1.5
  }}}
  will now look like this:
  {{{
given().log().body(). .. // Log the _request_ body in versions >= 1.5
  }}}
  and
  {{{
expect().log().body() .. // Log the response body in versions >= 1.5
  }}}
  You can also log e.g. only headers in the request and the response:
  {{{
given().log().headers(). .. // Log only the request headers
  }}}
  and
  {{{
expect().log().headers(). .. // Log only the response headers
  }}}
  Previously there was a method called `logOnError` in both the [http://rest-assured.googlecode.com/svn/tags/1.5/apidocs/com/jayway/restassured/specification/RequestSpecification.html request] and [http://rest-assured.googlecode.com/svn/tags/1.5/apidocs/com/jayway/restassured/specification/ResponseSpecification.html response specification]. This has now been replaced by the following method in the response specification:
  {{{
expect().log().ifError(). ..
  }}}
  (issue 81).

== Other notable changes ==
  * Added support for serializing objects to a parameter if the content-type is set:
  {{{
  given().
          contentType("application/json").
          queryParam("category", "Games").
          formParam("object", new GameObject(..)). // GameObject will be serialized to JSON
  when().
          post("/somewhere");
}}}
  * Added support for mapping a path to a Java object in [http://rest-assured.googlecode.com/svn/tags/1.4.5/apidocs/com/jayway/restassured/path/json/JsonPath.html JsonPath], e.g: 
{{{
Book book = from(JSON).getObject("store.book[2]", Book.class);
}}}
== Minor changes ==
See [http://github.com/jayway/rest-assured/raw/master/changelog.txt change log] for more details